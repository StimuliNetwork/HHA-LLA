// This Pine Script® code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © StimuliNetwork

//@version=6
indicator("HHA & LLA", overlay=true)

len1 = input.int(20, "Short Lookback", minval=1)
len2 = input.int(50, "Medium Lookback", minval=1)
len3 = input.int(500, "Long Lookback", minval=1)
shortWeight = input.float(0.5, "Weight Short", minval=0)
medWeight = input.float(0.3, "Weight Medium", minval=0)
longWeight = input.float(0.2, "Weight Long", minval=0)

atrPeriod = input.int(10, "ATR Length", minval=1)
factor = input.float(3.0, "Factor", minval=0.01, step=0.01)
minDistancePct = input.float(0.5, "Min % Distance for Unique Points", minval=0.01, step=0.01)

HHA = (ta.highest(high, len1) * shortWeight + ta.highest(high, len2) * medWeight + ta.highest(high, len3) * longWeight) / (shortWeight + medWeight + longWeight)
LLA = (ta.lowest(low, len1) * shortWeight + ta.lowest(low, len2) * medWeight + ta.lowest(low, len3) * longWeight) / (shortWeight + medWeight + longWeight)

plot(HHA, color=color.new(color.maroon, 0), linewidth=2, title="Weighted HHA")
plot(LLA, color=color.new(color.teal, 0), linewidth=2, title="Weighted LLA")

[supertrend, direction] = ta.supertrend(factor, atrPeriod)
upTrend = direction < 0
downTrend = direction > 0

supertrendLine = plot(upTrend ? supertrend : na, title="Up Trend", color=color.green, style=plot.style_linebr)
downTrendLine = plot(downTrend ? supertrend : na, title="Down Trend", color=color.red, style=plot.style_linebr)
bodyMiddle = plot(barstate.isfirst ? na : (open + close) / 2, title="Body Middle", display=display.none)

fill(bodyMiddle, supertrendLine, title="Uptrend Background", color=color.new(color.green, 90), fillgaps=false)
fill(bodyMiddle, downTrendLine, title="Downtrend Background", color=color.new(color.red, 90), fillgaps=false)

var float[] uniqueLows = array.new_float()
var float[] uniqueHighs = array.new_float()

trendChanged = (upTrend and not upTrend[1]) or (downTrend and not downTrend[1])
if trendChanged
    array.clear(uniqueLows)
    array.clear(uniqueHighs)

add_unique(arr, value, minPct) =>
    if array.size(arr) == 0
        array.push(arr, value)
    else
        isUnique = true
        sz = array.size(arr)
        for i = 0 to sz - 1
            existing = array.get(arr, i)
            denom = math.max(math.abs(existing), 1e-10)
            pct = math.abs((value - existing) / denom) * 100.0
            if pct < minPct
                isUnique := false
                break
        if isUnique
            array.push(arr, value)

if upTrend
    add_unique(uniqueLows, low, minDistancePct)
if downTrend
    add_unique(uniqueHighs, high, minDistancePct)

array_avg(arr) =>
    sz = array.size(arr)
    if sz == 0
        na
    else
        float s = 0.0
        for i = 0 to sz - 1
            s += array.get(arr, i)
        s / sz

avgLowestLows = array_avg(uniqueLows)
avgHighestHighs = array_avg(uniqueHighs)

plot(upTrend ? avgLowestLows : na, title="Avg Unique Lows (Uptrend)", color=color.blue, linewidth=2, style=plot.style_stepline)
plot(downTrend ? avgHighestHighs : na, title="Avg Unique Highs (Downtrend)", color=color.orange, linewidth=2, style=plot.style_stepline)

alertcondition(ta.crossover(close, HHA), title="Cross Above HHA", message="Price crossed above HHA")
alertcondition(ta.crossunder(close, LLA), title="Cross Below LLA", message="Price crossed below LLA")
alertcondition(not na(avgLowestLows) and ta.crossover(close, avgLowestLows), title="Cross Above Avg Lows", message="Price crossed above avg unique lows")
alertcondition(not na(avgHighestHighs) and ta.crossunder(close, avgHighestHighs), title="Cross Below Avg Highs", message="Price crossed below avg unique highs")

var label countLabel = na
if not na(countLabel)
    label.delete(countLabel)

formatFloat(value) =>
    na(value) ? "na" : value > 1 ? str.tostring(value, "#.##") : str.tostring(value)

countText = (upTrend and array.size(uniqueLows) > 0) ? ("L -> " + str.tostring(array.size(uniqueLows)) + " | " + formatFloat(avgLowestLows)) : (downTrend and array.size(uniqueHighs) > 0) ? ("H -> " + str.tostring(array.size(uniqueHighs)) + " | " + formatFloat(avgHighestHighs)) : ""

if (countText != "")
    yPos = (upTrend and array.size(uniqueLows) > 0) ? avgLowestLows : (downTrend and array.size(uniqueHighs) > 0 ? avgHighestHighs : close)
    countLabel := label.new(x=bar_index, y=yPos, text=countText, style=label.style_label_left, color=color.new(color.black, 100), textcolor=color.white, size=size.tiny)

//..to God be the Glory

